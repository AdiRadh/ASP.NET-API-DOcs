//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceAccess.TestServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestServiceReference.WebServiceSoap")]
    public interface WebServiceSoap {
        
        // CODEGEN: Generating message contract since element name HelloWorldResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        ServiceAccess.TestServiceReference.HelloWorldResponse HelloWorld(ServiceAccess.TestServiceReference.HelloWorldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceAccess.TestServiceReference.HelloWorldResponse> HelloWorldAsync(ServiceAccess.TestServiceReference.HelloWorldRequest request);
        
        // CODEGEN: Generating message contract since element name TestMethodResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TestMethod", ReplyAction="*")]
        ServiceAccess.TestServiceReference.TestMethodResponse TestMethod(ServiceAccess.TestServiceReference.TestMethodRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TestMethod", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceAccess.TestServiceReference.TestMethodResponse> TestMethodAsync(ServiceAccess.TestServiceReference.TestMethodRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorld", Namespace="http://tempuri.org/", Order=0)]
        public ServiceAccess.TestServiceReference.HelloWorldRequestBody Body;
        
        public HelloWorldRequest() {
        }
        
        public HelloWorldRequest(ServiceAccess.TestServiceReference.HelloWorldRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class HelloWorldRequestBody {
        
        public HelloWorldRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorldResponse", Namespace="http://tempuri.org/", Order=0)]
        public ServiceAccess.TestServiceReference.HelloWorldResponseBody Body;
        
        public HelloWorldResponse() {
        }
        
        public HelloWorldResponse(ServiceAccess.TestServiceReference.HelloWorldResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class HelloWorldResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string HelloWorldResult;
        
        public HelloWorldResponseBody() {
        }
        
        public HelloWorldResponseBody(string HelloWorldResult) {
            this.HelloWorldResult = HelloWorldResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TestMethodRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TestMethod", Namespace="http://tempuri.org/", Order=0)]
        public ServiceAccess.TestServiceReference.TestMethodRequestBody Body;
        
        public TestMethodRequest() {
        }
        
        public TestMethodRequest(ServiceAccess.TestServiceReference.TestMethodRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class TestMethodRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool yeet;
        
        public TestMethodRequestBody() {
        }
        
        public TestMethodRequestBody(bool yeet) {
            this.yeet = yeet;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TestMethodResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="TestMethodResponse", Namespace="http://tempuri.org/", Order=0)]
        public ServiceAccess.TestServiceReference.TestMethodResponseBody Body;
        
        public TestMethodResponse() {
        }
        
        public TestMethodResponse(ServiceAccess.TestServiceReference.TestMethodResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class TestMethodResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string TestMethodResult;
        
        public TestMethodResponseBody() {
        }
        
        public TestMethodResponseBody(string TestMethodResult) {
            this.TestMethodResult = TestMethodResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSoapChannel : ServiceAccess.TestServiceReference.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<ServiceAccess.TestServiceReference.WebServiceSoap>, ServiceAccess.TestServiceReference.WebServiceSoap {
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceAccess.TestServiceReference.HelloWorldResponse ServiceAccess.TestServiceReference.WebServiceSoap.HelloWorld(ServiceAccess.TestServiceReference.HelloWorldRequest request) {
            return base.Channel.HelloWorld(request);
        }
        
        public string HelloWorld() {
            ServiceAccess.TestServiceReference.HelloWorldRequest inValue = new ServiceAccess.TestServiceReference.HelloWorldRequest();
            inValue.Body = new ServiceAccess.TestServiceReference.HelloWorldRequestBody();
            ServiceAccess.TestServiceReference.HelloWorldResponse retVal = ((ServiceAccess.TestServiceReference.WebServiceSoap)(this)).HelloWorld(inValue);
            return retVal.Body.HelloWorldResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceAccess.TestServiceReference.HelloWorldResponse> ServiceAccess.TestServiceReference.WebServiceSoap.HelloWorldAsync(ServiceAccess.TestServiceReference.HelloWorldRequest request) {
            return base.Channel.HelloWorldAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceAccess.TestServiceReference.HelloWorldResponse> HelloWorldAsync() {
            ServiceAccess.TestServiceReference.HelloWorldRequest inValue = new ServiceAccess.TestServiceReference.HelloWorldRequest();
            inValue.Body = new ServiceAccess.TestServiceReference.HelloWorldRequestBody();
            return ((ServiceAccess.TestServiceReference.WebServiceSoap)(this)).HelloWorldAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceAccess.TestServiceReference.TestMethodResponse ServiceAccess.TestServiceReference.WebServiceSoap.TestMethod(ServiceAccess.TestServiceReference.TestMethodRequest request) {
            return base.Channel.TestMethod(request);
        }
        
        public string TestMethod(bool yeet) {
            ServiceAccess.TestServiceReference.TestMethodRequest inValue = new ServiceAccess.TestServiceReference.TestMethodRequest();
            inValue.Body = new ServiceAccess.TestServiceReference.TestMethodRequestBody();
            inValue.Body.yeet = yeet;
            ServiceAccess.TestServiceReference.TestMethodResponse retVal = ((ServiceAccess.TestServiceReference.WebServiceSoap)(this)).TestMethod(inValue);
            return retVal.Body.TestMethodResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceAccess.TestServiceReference.TestMethodResponse> ServiceAccess.TestServiceReference.WebServiceSoap.TestMethodAsync(ServiceAccess.TestServiceReference.TestMethodRequest request) {
            return base.Channel.TestMethodAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceAccess.TestServiceReference.TestMethodResponse> TestMethodAsync(bool yeet) {
            ServiceAccess.TestServiceReference.TestMethodRequest inValue = new ServiceAccess.TestServiceReference.TestMethodRequest();
            inValue.Body = new ServiceAccess.TestServiceReference.TestMethodRequestBody();
            inValue.Body.yeet = yeet;
            return ((ServiceAccess.TestServiceReference.WebServiceSoap)(this)).TestMethodAsync(inValue);
        }
    }
}
